data:
    name: homographies
    data_dir: revisitop1m
    train_size: 150000
    val_size: 2000
    batch_size: 32
    num_workers: 4
    homography:
        difficulty: 0.7
        max_angle: 45
    photometric:
        name: lg
model:
    name: two_view_pipeline
    run_gt_in_forward: True
    extractor:
        name: extractors.superpoint
        max_num_keypoints: 512
        force_num_keypoints: True
        detection_threshold: 0.0
        nms_radius: 3
        trainable: False
    ground_truth:
        name: matchers.homography_matcher
        th_positive: 3
        th_negative: 3
    diffuser:
        name: diffusers.diffuser
        steps: 4096
        learn_sigma: False
        sigma_small: False
        noise_schedule: "linear"
        use_kl: False
        predict_xstart: True
        rescale_timesteps: True
        rescale_learned_sigmas: True
        timestep_respacing: ""
        ddim_steps: 2
        schedule_sampler: "uniform"
        use_ddim: True
        clip_denoised: True
        diffuser_loss_weight: 1000
        scale: 2

    matcher:
        name: matchers.diffglue
        filter_threshold: 0.1
        flash: false
        checkpointed: true
        n_layers: 9
        scale: 2
        feature_dim: 384 # DINO output feature dimension 

    encoder: 
        _target_: scripts.models.image_feature_extractor.BatchImageFeatureExtractor
        extractor:
            _target_: scripts.models.image_feature_extractor.MultiScaleImageFeatureExtractor
            # modelname: "dino_vits8"
            # modelname: "dino_vits16"
            modelname: "dinov2_vits14"
            freeze: True
            # scale_factors: [1]
train:
    seed: 0
    epochs: 40
    log_every_iter: 200
    eval_every_iter: 1000
    lr: 1e-4
    lr_schedule:
        start: 3
        type: factor
        on_epoch: true
        factor: 0.8
benchmarks:
    hpatches:
      eval:
        estimator: opencv
        ransac_th: 0.5

# python -m scripts.train SP+DiffGlue_homography --conf scripts/configs/superpoint+diffglue_homography.yaml --run_benchmarks